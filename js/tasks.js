<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ç—Ä–µ–Ω–∞–∂—ë—Ä: –ø—Ä–æ—Ü–µ–Ω—Ç—ã –∏ –∫—Ä–µ–¥–∏—Ç—ã</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body, html {
            margin: 0;
            padding: 0;
            min-height: 100vh;
            font-family: 'Inter', sans-serif;
            overflow-x: hidden;
        }
        
        .financial-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
            background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
        }
        
        .financial-element {
            position: absolute;
            opacity: 0.15;
            animation: float 15s infinite ease-in-out;
            will-change: transform;
        }
        
        .percentage {
            font-weight: 700;
            color: #1e40af;
        }
        
        .chart {
            border-radius: 8px;
            background: rgba(30, 64, 175, 0.1);
            border: 2px solid rgba(30, 64, 175, 0.2);
        }
        
        .coin {
            border-radius: 50%;
            background: radial-gradient(circle at 30% 30%, #facc15, #eab308);
            box-shadow: 0 0 10px rgba(234, 179, 8, 0.5);
        }
        
        .graph-line {
            height: 2px;
            background: linear-gradient(90deg, transparent, #1e40af, transparent);
            transform-origin: left center;
        }
        
        .circle {
            position: absolute;
            border-radius: 50%;
            animation: moveCircle linear infinite;
            will-change: transform;
        }
        
        .card {
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.85);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        }
        
        .tab-btn {
            transition: all 0.2s ease;
        }
        
        .tab-btn:hover {
            transform: translateY(-2px);
        }
        
        .progress-bar {
            transition: width 0.6s ease;
        }
        
        /* –ê–Ω–∏–º–∞—Ü–∏—è —Ñ–æ–Ω–∞ —Ö–µ–¥–µ—Ä–∞ */
        .header-animation {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, 
                rgba(255,255,255,0.1) 0%, 
                rgba(255,255,255,0) 50%, 
                rgba(255,255,255,0.1) 100%);
            background-size: 200% 200%;
            animation: headerShine 8s ease infinite;
        }
        
        @keyframes headerShine {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        /* –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ */
        .animate-title {
            perspective: 1000px;
        }
        
        .text-gradient {
            background: linear-gradient(90deg, 
                #ffffff 0%, 
                #a7d8ff 50%, 
                #ffffff 100%);
            background-size: 200% auto;
            color: transparent;
            background-clip: text;
            -webkit-background-clip: text;
            animation: textShine 3s linear infinite;
            display: inline-block;
        }
        
        @keyframes textShine {
            to { background-position: 200% center; }
        }
        
        /* –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞ */
        .animate-subtitle {
            animation: fadeInUp 1.5s ease-out both;
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 0.9;
                transform: translateY(0);
            }
        }
        
        @keyframes float {
            0%, 100% { transform: translate(0, 0) rotate(0deg); }
            25% { transform: translate(5vw, 5vh) rotate(2deg); }
            50% { transform: translate(-5vw, 8vh) rotate(-2deg); }
            75% { transform: translate(3vw, -4vh) rotate(1deg); }
        }
        
        @keyframes moveCircle {
            to {
                transform: translate(var(--tx), var(--ty));
            }
        }
        
        @keyframes pulse {
            0%, 100% { transform: scale(1); opacity: 0.15; }
            50% { transform: scale(1.05); opacity: 0.2; }
        }
    </style>
</head>
<body class="bg-gray-50 text-gray-800">
    <!-- –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ñ–æ–Ω -->
    <div class="financial-bg" id="financialBg">
        <div class="bg-animation"></div>
    </div>
    
    <!-- –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç -->
    <header class="bg-gradient-to-r from-blue-800 to-blue-600 text-white py-8 shadow-lg relative overflow-hidden">
        <!-- –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω —Ö–µ–¥–µ—Ä–∞ -->
        <div class="absolute inset-0 overflow-hidden">
            <div class="header-animation"></div>
        </div>
        
        <div class="container mx-auto px-4 relative z-10">
            <!-- –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ -->
            <h1 class="text-4xl md:text-5xl font-bold mb-2 text-center text-white animate-title">
                <span class="text-gradient">–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ç—Ä–µ–Ω–∞–∂—ë—Ä</span>
            </h1>
            <p class="text-xl text-center opacity-90 animate-subtitle">–û—Å–≤–æ–π—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã, –≤–∫–ª–∞–¥—ã –∏ –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ</p>
        </div>
    </header>
    
    <div class="container mx-auto px-4 py-8 max-w-4xl relative z-10">
        <div class="card rounded-2xl overflow-hidden mb-8 transform transition-all hover:shadow-2xl">
            <div class="p-6 md:p-8">
                <h2 class="text-2xl font-bold text-blue-700 mb-6 border-b-2 border-blue-500 pb-2">–¢—Ä–µ–Ω–∞–∂—ë—Ä –ø–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ</h2>
                
                <!-- –¢–∞–±—ã -->
                <div class="flex flex-wrap gap-2 mb-6 border-b border-gray-200">
                    <button class="tab-btn bg-blue-600 text-white px-5 py-3 rounded-lg active" onclick="openTab('deposit')">
                        <span class="mr-2">üí∞</span> –í–∫–ª–∞–¥—ã
                    </button>
                    <button class="tab-btn bg-blue-100 text-blue-800 px-5 py-3 rounded-lg hover:bg-blue-200" onclick="openTab('annuity')">
                        <span class="mr-2">üè¶</span> –ê–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–π –∫—Ä–µ–¥–∏—Ç
                    </button>
                    <button class="tab-btn bg-blue-100 text-blue-800 px-5 py-3 rounded-lg hover:bg-blue-200" onclick="openTab('diff')">
                        <span class="mr-2">üìâ</span> –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫—Ä–µ–¥–∏—Ç
                    </button>
                    <button class="tab-btn bg-blue-100 text-blue-800 px-5 py-3 rounded-lg hover:bg-blue-200" onclick="openTab('invest')">
                        <span class="mr-2">üìà</span> –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
                    </button>
                    <button class="tab-btn bg-blue-100 text-blue-800 px-5 py-3 rounded-lg hover:bg-blue-200" onclick="openTab('ege')">
                        <span class="mr-2">üéì</span> –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ï–ì–≠
                    </button>
                    <button class="tab-btn bg-blue-100 text-blue-800 px-5 py-3 rounded-lg hover:bg-blue-200" onclick="openTab('theory')">
                        <span class="mr-2">üìö</span> –¢–µ–æ—Ä–∏—è
                    </button>
                </div>
                
                <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–∞–±–æ–≤ -->
                <div id="deposit" class="tab-content">
                    <div class="bg-blue-50 rounded-xl p-6 mb-6">
                        <h3 class="text-xl font-semibold text-blue-800 mb-3">–ó–∞–¥–∞—á–∞ –Ω–∞ –≤–∫–ª–∞–¥—ã</h3>
                        <p id="deposit-question" class="mb-4 text-gray-700">–°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —á–µ—Ä–µ–∑ 5 –ª–µ—Ç, –µ—Å–ª–∏ –≤–ª–æ–∂–∏—Ç–µ 100 000 —Ä—É–±. –ø–æ–¥ 8% –≥–æ–¥–æ–≤—ã—Ö —Å –µ–∂–µ–≥–æ–¥–Ω–æ–π –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π?</p>
                        
                        <div class="flex flex-col md:flex-row gap-4 items-start md:items-end">
                            <div class="w-full md:w-auto flex-1">
                                <label class="block text-sm font-medium text-gray-700 mb-1">–í–∞—à –æ—Ç–≤–µ—Ç (—Ä—É–±.):</label>
                                <input type="number" id="deposit-answer" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É" 
                                    class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
                                <div id="deposit-alert" class="hidden text-sm mt-1"></div>
                            </div>
                            <button onclick="checkAnswer('deposit')" 
                                class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg transition-all shadow-md hover:shadow-lg pulse">
                                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
                            </button>
                        </div>
                        
                        <div id="deposit-result" class="mt-4 p-3 rounded-lg hidden"></div>
                    </div>
                    
                    <div class="flex justify-between items-center">
                        <button onclick="generateTask('deposit')" 
                            class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg transition-all">
                            <span class="mr-2">üîÑ</span> –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞
                        </button>
                        
                        <div class="text-sm text-gray-500">
                            <span id="deposit-score">0</span> –∏–∑ <span id="deposit-total">0</span> –≤–µ—Ä–Ω–æ
                        </div>
                    </div>
                </div>
                
                <div id="annuity" class="tab-content hidden">
                    <div class="bg-blue-50 rounded-xl p-6 mb-6">
                        <h3 class="text-xl font-semibold text-blue-800 mb-3">–ó–∞–¥–∞—á–∞ –Ω–∞ –∞–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–π –∫—Ä–µ–¥–∏—Ç</h3>
                        <p id="annuity-question" class="mb-4 text-gray-700">–ö–∞–∫–æ–π –±—É–¥–µ—Ç –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂ –ø–æ –∫—Ä–µ–¥–∏—Ç—É 500 000 —Ä—É–±. –Ω–∞ 5 –ª–µ—Ç –ø–æ–¥ 12% –≥–æ–¥–æ–≤—ã—Ö —Å –∞–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏?</p>
                        
                        <div class="flex flex-col md:flex-row gap-4 items-start md:items-end">
                            <div class="w-full md:w-auto flex-1">
                                <label class="block text-sm font-medium text-gray-700 mb-1">–í–∞—à –æ—Ç–≤–µ—Ç (—Ä—É–±.):</label>
                                <input type="number" id="annuity-answer" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É" 
                                    class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
                                <div id="annuity-alert" class="hidden text-sm mt-1"></div>
                            </div>
                            <button onclick="checkAnswer('annuity')" 
                                class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg transition-all shadow-md hover:shadow-lg pulse">
                                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
                            </button>
                        </div>
                        
                        <div id="annuity-result" class="mt-4 p-3 rounded-lg hidden"></div>
                    </div>
                    
                    <div class="flex justify-between items-center">
                        <button onclick="generateTask('annuity')" 
                            class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg transition-all">
                            <span class="mr-2">üîÑ</span> –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞
                        </button>
                        
                        <div class="text-sm text-gray-500">
                            <span id="annuity-score">0</span> –∏–∑ <span id="annuity-total">0</span> –≤–µ—Ä–Ω–æ
                        </div>
                    </div>
                </div>
                
                <div id="diff" class="tab-content hidden">
                    <div class="bg-blue-50 rounded-xl p-6 mb-6">
                        <h3 class="text-xl font-semibold text-blue-800 mb-3">–ó–∞–¥–∞—á–∞ –Ω–∞ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫—Ä–µ–¥–∏—Ç</h3>
                        <p id="diff-question" class="mb-4 text-gray-700">–ö–∞–∫–æ–π –±—É–¥–µ—Ç –ø–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂–∏ –ø–æ –∫—Ä–µ–¥–∏—Ç—É 500 000 —Ä—É–±. –Ω–∞ 5 –ª–µ—Ç –ø–æ–¥ 12% –≥–æ–¥–æ–≤—ã—Ö —Å –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏? (–≤–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)</p>
                        
                        <div class="flex flex-col md:flex-row gap-4 items-start md:items-end">
                            <div class="w-full md:w-auto flex-1">
                                <label class="block text-sm font-medium text-gray-700 mb-1">–í–∞—à –æ—Ç–≤–µ—Ç (—Ä—É–±.):</label>
                                <input type="text" id="diff-answer" placeholder="–í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª" 
                                    class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
                                <div id="diff-alert" class="hidden text-sm mt-1"></div>
                            </div>
                            <button onclick="checkAnswer('diff')" 
                                class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg transition-all shadow-md hover:shadow-lg pulse">
                                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
                            </button>
                        </div>
                        
                        <div id="diff-result" class="mt-4 p-3 rounded-lg hidden"></div>
                    </div>
                    
                    <div class="flex justify-between items-center">
                        <button onclick="generateTask('diff')" 
                            class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg transition-all">
                            <span class="mr-2">üîÑ</span> –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞
                        </button>
                        
                        <div class="text-sm text-gray-500">
                            <span id="diff-score">0</span> –∏–∑ <span id="diff-total">0</span> –≤–µ—Ä–Ω–æ
                        </div>
                    </div>
                </div>
                
                <div id="invest" class="tab-content hidden">
                    <div class="bg-blue-50 rounded-xl p-6 mb-6">
                        <h3 class="text-xl font-semibold text-blue-800 mb-3">–ó–∞–¥–∞—á–∞ –Ω–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</h3>
                        <p id="invest-question" class="mb-4 text-gray-700">–ö–∞–∫—É—é —Å—É–º–º—É –≤–∞–º –Ω—É–∂–Ω–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è –ø–æ–¥ 7% –≥–æ–¥–æ–≤—ã—Ö, —á—Ç–æ–±—ã —á–µ—Ä–µ–∑ 10 –ª–µ—Ç –ø–æ–ª—É—á–∏—Ç—å 1 000 000 —Ä—É–±.?</p>
                        
                        <div class="flex flex-col md:flex-row gap-4 items-start md:items-end">
                            <div class="w-full md:w-auto flex-1">
                                <label class="block text-sm font-medium text-gray-700 mb-1">–í–∞—à –æ—Ç–≤–µ—Ç (—Ä—É–±.):</label>
                                <input type="number" id="invest-answer" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É" 
                                    class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
                                <div id="invest-alert" class="hidden text-sm mt-1"></div>
                            </div>
                            <button onclick="checkAnswer('invest')" 
                                class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg transition-all shadow-md hover:shadow-lg pulse">
                                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
                            </button>
                        </div>
                        
                        <div id="invest-result" class="mt-4 p-3 rounded-lg hidden"></div>
                    </div>
                    
                    <div class="flex justify-between items-center">
                        <button onclick="generateTask('invest')" 
                            class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg transition-all">
                            <span class="mr-2">üîÑ</span> –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞
                        </button>
                        
                        <div class="text-sm text-gray-500">
                            <span id="invest-score">0</span> –∏–∑ <span id="invest-total">0</span> –≤–µ—Ä–Ω–æ
                        </div>
                    </div>
                </div>
                
<!-- –†–∞–∑–¥–µ–ª –ï–ì–≠ -->
<div id="ege" class="tab-content hidden">
    <div class="bg-blue-50 rounded-xl p-6 mb-6">
        <h3 class="text-xl font-semibold text-blue-800 mb-3">–ó–∞–¥–∞—á–∞ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠</h3>
        <p id="ege-question" class="mb-4 text-gray-700"></p>
        
        <div class="flex flex-col md:flex-row gap-4 items-start md:items-end">
            <div class="w-full md:w-auto flex-1">
                <label class="block text-sm font-medium text-gray-700 mb-1">–í–∞—à –æ—Ç–≤–µ—Ç:</label>
                <input type="text" id="ege-answer" placeholder="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç" 
                    class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
                <div id="ege-alert" class="hidden text-sm mt-1"></div>
            </div>
            <button onclick="checkEgeAnswer()" 
                class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg transition-all shadow-md hover:shadow-lg pulse">
                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
            </button>
        </div>
        
        <div id="ege-result" class="mt-4 p-3 rounded-lg hidden"></div>
    </div>
    
    <div class="flex justify-between items-center">
        <button onclick="generateEgeTask()" 
            class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg transition-all">
            <span class="mr-2">üîÑ</span> –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞
        </button>
        
        <div class="text-sm text-gray-500">
            <span id="ege-score">0</span> –∏–∑ <span id="ege-total">0</span> –≤–µ—Ä–Ω–æ
        </div>
    </div>
</div>
                
                <div id="theory" class="tab-content hidden">
                    <div class="bg-blue-50 rounded-lg p-4 mb-4">
                        <h3 class="text-xl font-semibold text-blue-800 mb-3">–ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã</h3>
                        <p class="mb-2 text-gray-700"><span class="font-bold">–§–æ—Ä–º—É–ª–∞:</span> S = P √ó (1 + r √ó t)</p>
                        <p class="text-gray-700">–ì–¥–µ: S - –∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞, P - –Ω–∞—á–∞–ª—å–Ω–∞—è —Å—É–º–º–∞, r - –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ (–≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —Ñ–æ—Ä–º–µ), t - –≤—Ä–µ–º—è –≤ –≥–æ–¥–∞—Ö.</p>
                    </div>
                    
                    <div class="bg-blue-50 rounded-lg p-4 mb-4">
                        <h3 class="text-xl font-semibold text-blue-800 mb-3">–°–ª–æ–∂–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã</h3>
                        <p class="mb-2 text-gray-700"><span class="font-bold">–§–æ—Ä–º—É–ª–∞:</span> S = P √ó (1 + r)<sup>t</sup></p>
                        <p class="text-gray-700">–ü—Ä–∏ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –Ω–∞ –ø—Ä–æ—Ü–µ–Ω—Ç—ã, –ø–æ—ç—Ç–æ–º—É —Å—É–º–º–∞ —Ä–∞—Å—Ç—ë—Ç –±—ã—Å—Ç—Ä–µ–µ.</p>
                    </div>
                    
                    <div class="bg-blue-50 rounded-lg p-4 mb-4">
                        <h3 class="text-xl font-semibold text-blue-800 mb-3">–ê–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–π –ø–ª–∞—Ç—ë–∂</h3>
                        <p class="mb-2 text-gray-700"><span class="font-bold">–§–æ—Ä–º—É–ª–∞:</span> –ü–ª–∞—Ç—ë–∂ = (P √ó r √ó (1 + r)<sup>n</sup>) / ((1 + r)<sup>n</sup> - 1)</p>
                        <p class="text-gray-700">–ì–¥–µ: P - —Å—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞, r - –º–µ—Å—è—á–Ω–∞—è —Å—Ç–∞–≤–∫–∞, n - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤.</p>
                    </div>
                    
                    <div class="bg-blue-50 rounded-lg p-4 mb-4">
                        <h3 class="text-xl font-semibold text-blue-800 mb-3">–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞—Ç—ë–∂</h3>
                        <p class="mb-2 text-gray-700"><span class="font-bold">–§–æ—Ä–º—É–ª–∞:</span> –ü–ª–∞—Ç—ë–∂ = (P / n) + (P - (P/n)√ó(m-1)) √ó r</p>
                        <p class="text-gray-700">–ì–¥–µ: n - –æ–±—â–µ–µ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–µ–≤, m - —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü, r - –º–µ—Å—è—á–Ω–∞—è —Å—Ç–∞–≤–∫–∞.</p>
                    </div>
                </div>
                
                <!-- –ü—Ä–æ–≥—Ä–µ—Å—Å -->
                <div class="mt-8">
                    <h3 class="text-lg font-semibold text-gray-700 mb-3">–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</h3>
                    <div class="w-full bg-gray-200 rounded-full h-3 overflow-hidden">
                        <div id="progress-bar" class="bg-gradient-to-r from-blue-500 to-blue-600 h-3 rounded-full progress-bar" style="width: 0%"></div>
                    </div>
                    <div class="text-right mt-1 text-sm text-gray-600">
                        <span id="total-score">0</span>% –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                    </div>
                </div>
            </div>
        </div>
        
        <footer class="bg-gray-800 text-white py-6 mt-12">
            <div class="container mx-auto px-4 text-center">
                <p class="mb-2">¬© 2025 –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ç—Ä–µ–Ω–∞–∂—ë—Ä. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ï–ì–≠.</p>
                <p class="text-gray-400 text-sm">–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏</p>
            </div>
        </footer>
    </div>

    <script>
        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        let currentDepositTask = {};
        let currentAnnuityTask = {};
        let currentDiffTask = {};
        let currentInvestTask = {};
        let currentEgeTask = {};
        let score = 0;
        let totalTasks = 0;
        let answeredDeposit = false;
        let answeredAnnuity = false;
        let answeredDiff = false;
        let answeredInvest = false;
        let answeredEge = false;

        // –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ñ–æ–Ω
        function createFinancialBackground() {
            const bg = document.getElementById('financialBg');
            const elements = [];
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã
            for (let i = 0; i < 15; i++) {
                const percent = document.createElement('div');
                percent.className = 'financial-element percentage';
                percent.textContent = `${Math.floor(Math.random() * 20) + 1}%`;
                percent.style.fontSize = `${Math.random() * 20 + 10}px`;
                percent.style.left = `${Math.random() * 100}%`;
                percent.style.top = `${Math.random() * 100}%`;
                percent.style.animationDelay = `${Math.random() * 5}s`;
                percent.style.animationDuration = `${Math.random() * 20 + 10}s`;
                elements.push(percent);
            }
            
            // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫–∏
            for (let i = 0; i < 10; i++) {
                const chart = document.createElement('div');
                chart.className = 'financial-element chart';
                chart.style.width = `${Math.random() * 100 + 50}px`;
                chart.style.height = `${Math.random() * 60 + 30}px`;
                chart.style.left = `${Math.random() * 100}%`;
                chart.style.top = `${Math.random() * 100}%`;
                chart.style.animationDelay = `${Math.random() * 5}s`;
                chart.style.animationDuration = `${Math.random() * 20 + 10}s`;
                
                // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞
                for (let j = 0; j < 3; j++) {
                    const line = document.createElement('div');
                    line.className = 'graph-line';
                    line.style.width = '100%';
                    line.style.height = '2px';
                    line.style.margin = '5px 0';
                    line.style.transform = `scaleX(${Math.random() * 0.8 + 0.2})`;
                    chart.appendChild(line);
                }
                
                elements.push(chart);
            }
            
            // –°–æ–∑–¥–∞–µ–º –º–æ–Ω–µ—Ç—ã
            for (let i = 0; i < 8; i++) {
                const coin = document.createElement('div');
                coin.className = 'financial-element coin';
                coin.style.width = `${Math.random() * 30 + 20}px`;
                coin.style.height = coin.style.width;
                coin.style.left = `${Math.random() * 100}%`;
                coin.style.top = `${Math.random() * 100}%`;
                coin.style.animationDelay = `${Math.random() * 5}s`;
                coin.style.animationDuration = `${Math.random() * 20 + 10}s`;
                elements.push(coin);
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Ñ–æ–Ω
            elements.forEach(el => bg.appendChild(el));
        }
        
        // –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫—Ä—É–≥–∏ –¥–ª—è —Ñ–æ–Ω–∞
        function createBackground() {
            const bgAnimation = document.querySelector('.bg-animation');
            if (!bgAnimation) {
                console.error('–≠–ª–µ–º–µ–Ω—Ç .bg-animation –Ω–µ –Ω–∞–π–¥–µ–Ω!');
                return;
            }    
            bgAnimation.innerHTML = ''; // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫—Ä—É–≥–∏
            
            const colors = [
                'rgba(255, 255, 255, 0.2)',
                'rgba(200, 230, 255, 0.3)',
                'rgba(150, 200, 255, 0.25)'
            ];
            
            for (let i = 0; i < 20; i++) {
                const circle = document.createElement('div');
                circle.classList.add('circle');
                
                // –°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                const size = Math.random() * 300 + 100;
                const posX = Math.random() * window.innerWidth;
                const posY = Math.random() * window.innerHeight;
                const duration = Math.random() * 30 + 20;
                const delay = Math.random() * -20;
                const color = colors[Math.floor(Math.random() * colors.length)];
                
                // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è
                const angle = Math.random() * Math.PI * 2;
                const distance = 500 + Math.random() * 500;
                const tx = Math.cos(angle) * distance;
                const ty = Math.sin(angle) * distance;
                
                circle.style.cssText = `
                    width: ${size}px;
                    height: ${size}px;
                    left: ${posX}px;
                    top: ${posY}px;
                    background: ${color};
                    animation-duration: ${duration}s;
                    animation-delay: ${delay}s;
                    --tx: ${tx}px;
                    --ty: ${ty}px;
                `;
                
                bgAnimation.appendChild(circle);
            }
        }
        
        // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–∞–º–∏
        function openTab(tabName) {
            // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Ç–∞–±—ã
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.add('hidden');
                tab.classList.remove('block', 'active');
            });
            
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Å—Ç–∏–ª—å —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('bg-blue-600', 'text-white');
                btn.classList.add('bg-blue-100', 'text-blue-800', 'hover:bg-blue-200');
            });
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞–±
            document.getElementById(tabName).classList.remove('hidden');
            document.getElementById(tabName).classList.add('block', 'active');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Å—Ç–∏–ª—å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–µ
            event.currentTarget.classList.remove('bg-blue-100', 'text-blue-800', 'hover:bg-blue-200');
            event.currentTarget.classList.add('bg-blue-600', 'text-white');
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞–±–∞
            if (tabName === 'ege') {
                generateEgeTask();
            } else {
                generateTask(tabName);
            }
        }
        
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á
        function generateTask(type) {
            let question, correctAnswer;
            
            if (type === 'deposit') {
                const principal = Math.floor(Math.random() * 90000) + 10000;
                const rate = Math.floor(Math.random() * 11) + 5;
                const years = Math.floor(Math.random() * 5) + 1;
                const isCompound = Math.random() > 0.5;
                
                if (isCompound) {
                    correctAnswer = principal * Math.pow(1 + rate / 100, years);
                    question = `–í–∫–ª–∞–¥ ${formatNumber(principal)} —Ä—É–±. –ø–æ–¥ ${rate}% –≥–æ–¥–æ–≤—ã—Ö –Ω–∞ ${years} ${getYearWord(years)} —Å –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π. –°–∫–æ–ª—å–∫–æ –ø–æ–ª—É—á–∏—Ç –∫–ª–∏–µ–Ω—Ç?`;
                } else {
                    correctAnswer = principal * (1 + rate / 100 * years);
                    question = `–í–∫–ª–∞–¥ ${formatNumber(principal)} —Ä—É–±. –ø–æ–¥ ${rate}% –≥–æ–¥–æ–≤—ã—Ö –Ω–∞ ${years} ${getYearWord(years)} –±–µ–∑ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏. –°–∫–æ–ª—å–∫–æ –ø–æ–ª—É—á–∏—Ç –∫–ª–∏–µ–Ω—Ç?`;
                }
                
                document.getElementById('deposit-question').textContent = question;
                document.getElementById('deposit-answer').value = '';
                document.getElementById('deposit-result').classList.add('hidden');
                document.getElementById('deposit-answer').disabled = false;
                document.getElementById('deposit-answer').dataset.correct = correctAnswer.toFixed(2);
                answeredDeposit = false;
            } 
            else if (type === 'annuity') {
                const principal = Math.floor(Math.random() * 900000) + 100000;
                const rate = Math.floor(Math.random() * 11) + 10;
                const years = Math.floor(Math.random() * 5) + 1;
                const months = years * 12;
                const monthlyRate = rate / 100 / 12;
                
                correctAnswer = principal * monthlyRate * Math.pow(1 + monthlyRate, months) / (Math.pow(1 + monthlyRate, months) - 1);
                question = `–ö—Ä–µ–¥–∏—Ç ${formatNumber(principal)} —Ä—É–±. –ø–æ–¥ ${rate}% –≥–æ–¥–æ–≤—ã—Ö –Ω–∞ ${years} ${getYearWord(years)} —Å –∞–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏. –ö–∞–∫–æ–π –±—É–¥–µ—Ç –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂?`;
                
                document.getElementById('annuity-question').textContent = question;
                document.getElementById('annuity-answer').value = '';
                document.getElementById('annuity-result').classList.add('hidden');
                document.getElementById('annuity-answer').disabled = false;
                document.getElementById('annuity-answer').dataset.correct = correctAnswer.toFixed(2);
                answeredAnnuity = false;
            }
            else if (type === 'diff') {
                const principal = Math.floor(Math.random() * 900000) + 100000;
                const rate = Math.floor(Math.random() * 11) + 10;
                const years = Math.floor(Math.random() * 5) + 1;
                const months = years * 12;
                
                const monthlyPrincipal = principal / months;
                const firstPayment = monthlyPrincipal + principal * (rate / 100 / 12);
                const lastPayment = monthlyPrincipal + monthlyPrincipal * (rate / 100 / 12);
                
                question = `–ö—Ä–µ–¥–∏—Ç ${formatNumber(principal)} —Ä—É–±. –ø–æ–¥ ${rate}% –≥–æ–¥–æ–≤—ã—Ö –Ω–∞ ${years} ${getYearWord(years)} —Å –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏. –ö–∞–∫–æ–π –±—É–¥–µ—Ç –ø–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂–∏? (–≤–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)`;
                
                document.getElementById('diff-question').textContent = question;
                document.getElementById('diff-answer').value = '';
                document.getElementById('diff-result').classList.add('hidden');
                document.getElementById('diff-answer').disabled = false;
                document.getElementById('diff-answer').dataset.correct = `${firstPayment.toFixed(2)} ${lastPayment.toFixed(2)}`;
                answeredDiff = false;
            }
            else if (type === 'invest') {
                const target = Math.floor(Math.random() * 9000000) + 1000000;
                const rate = Math.floor(Math.random() * 8) + 5;
                const years = Math.floor(Math.random() * 15) + 5;
                
                correctAnswer = target / Math.pow(1 + rate / 100, years);
                question = `–ö–∞–∫—É—é —Å—É–º–º—É –≤–∞–º –Ω—É–∂–Ω–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è –ø–æ–¥ ${rate}% –≥–æ–¥–æ–≤—ã—Ö, —á—Ç–æ–±—ã —á–µ—Ä–µ–∑ ${years} ${getYearWord(years)} –ø–æ–ª—É—á–∏—Ç—å ${formatNumber(target)} —Ä—É–±.?`;
                
                document.getElementById('invest-question').textContent = question;
                document.getElementById('invest-answer').value = '';
                document.getElementById('invest-result').classList.add('hidden');
                document.getElementById('invest-answer').disabled = false;
                document.getElementById('invest-answer').dataset.correct = correctAnswer.toFixed(2);
                answeredInvest = false;
            }
        }
        
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á –¥–ª—è –ï–ì–≠
        function generateEgeTask() {
            // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ UI
            answeredEge = false;
            document.getElementById('ege-alert').classList.add('hidden');
            document.getElementById('ege-answer').disabled = false;
            document.getElementById('ege-answer').value = '';

            const resultDiv = document.getElementById('ege-result');
            resultDiv.textContent = '';
            resultDiv.classList.add('hidden');
            resultDiv.classList.remove('bg-green-100', 'text-green-800', 'bg-red-100', 'text-red-800');

            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á–∏
            const taskType = Math.floor(Math.random() * 3) + 1;
            
            if (taskType === 1) {
                const principal = Math.floor(Math.random() * 90000) + 10000;
                const years = Math.floor(Math.random() * 5) + 1;
                
                const rate1 = Math.floor(Math.random() * 11) + 5;
                const rate2 = Math.floor(Math.random() * 11) + 5;
                const type1 = Math.random() > 0.5 ? '–ø—Ä–æ—Å—Ç—ã–º–∏' : '—Å–ª–æ–∂–Ω—ã–º–∏';
                const type2 = Math.random() > 0.5 ? '–ø—Ä–æ—Å—Ç—ã–º–∏' : '—Å–ª–æ–∂–Ω—ã–º–∏';
                
                let sum1, sum2;
                
                if (type1 === '–ø—Ä–æ—Å—Ç—ã–º–∏') {
                    sum1 = principal * (1 + rate1 / 100 * years);
                } else {
                    sum1 = principal * Math.pow(1 + rate1 / 100, years);
                }
                
                if (type2 === '–ø—Ä–æ—Å—Ç—ã–º–∏') {
                    sum2 = principal * (1 + rate2 / 100 * years);
                } else {
                    sum2 = principal * Math.pow(1 + rate2 / 100, years);
                }
                
                if (Math.abs(sum1 - sum2) < 100) {
                    return generateEgeTask();
                }
                
                document.getElementById('ege-question').textContent = 
                    `–í–∫–ª–∞–¥—á–∏–∫ —Ö–æ—á–µ—Ç –≤–Ω–µ—Å—Ç–∏ ${formatNumber(principal)} —Ä—É–±. –Ω–∞ ${years} ${getYearWord(years)}. –í—ã–±–µ—Ä–∏—Ç–µ –±–æ–ª–µ–µ –≤—ã–≥–æ–¥–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:
                    –í–∞—Ä–∏–∞–Ω—Ç 1: ${rate1}% –≥–æ–¥–æ–≤—ã—Ö —Å ${type1} –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏.
                    –í–∞—Ä–∏–∞–Ω—Ç 2: ${rate2}% –≥–æ–¥–æ–≤—ã—Ö —Å ${type2} –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏.
                    –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ (1 –∏–ª–∏ 2):`;
                
                currentEgeTask = {
                    correct: sum1 > sum2 ? '1' : '2'
                };
            }
            else if (taskType === 2) {
                const principal = Math.floor(Math.random() * 900000) + 100000;
                const rate = Math.floor(Math.random() * 11) + 10;
                const years = Math.floor(Math.random() * 5) + 1;
                const months = years * 12;
                const monthlyRate = rate / 100 / 12;
                
                const payment = principal * (monthlyRate * Math.pow(1 + monthlyRate, months)) / 
                              (Math.pow(1 + monthlyRate, months) - 1);
                const totalPayment = payment * months;
                const overpayment = totalPayment - principal;
                
                document.getElementById('ege-question').textContent = 
                    `–ö—Ä–µ–¥–∏—Ç ${formatNumber(principal)} —Ä—É–±. –ø–æ–¥ ${rate}% –≥–æ–¥–æ–≤—ã—Ö –Ω–∞ ${years} ${getYearWord(years)} —Å –∞–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏. –ö–∞–∫–æ–≤–∞ –æ–±—â–∞—è –ø–µ—Ä–µ–ø–ª–∞—Ç–∞ –ø–æ –∫—Ä–µ–¥–∏—Ç—É?`;
                
                currentEgeTask = {
                    correct: Math.round(overpayment * 100) / 100
                };
            }
            else if (taskType === 3) {
                const principal = Math.floor(Math.random() * 400000) + 100000;
                const multiplier = Math.random() * 1.2 + 1.3;
                const target = Math.round(principal * multiplier);
                const rate = Math.floor(Math.random() * 11) + 5;
                
                const t = Math.log(target / principal) / Math.log(1 + rate / 100);
                const tYears = Math.ceil(t);
                
                document.getElementById('ege-question').textContent = 
                    `–í–∫–ª–∞–¥ ${formatNumber(principal)} —Ä—É–±. –ø–æ–¥ ${rate}% –≥–æ–¥–æ–≤—ã—Ö —Å –µ–∂–µ–≥–æ–¥–Ω–æ–π –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π. –ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –ª–µ—Ç —Å—É–º–º–∞ –ø—Ä–µ–≤—ã—Å–∏—Ç ${formatNumber(target)} —Ä—É–±.?`;
                
                currentEgeTask = {
                    correct: tYears.toString()
                };
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –∑–∞–¥–∞—á –ï–ì–≠
        function checkEgeAnswer() {
            const alertDiv = document.getElementById('ege-alert');
            const answerInput = document.getElementById('ege-answer');
            const resultDiv = document.getElementById('ege-result');
            
            if (answeredEge) {
                resultDiv.textContent = "–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏! –ù–∞–∂–º–∏—Ç–µ '–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞'.";
                resultDiv.className = 'mt-4 p-3 rounded-lg bg-yellow-100 text-yellow-800';
                resultDiv.classList.remove('hidden');
                return;
            }
            
            const userInput = answerInput.value.trim();
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ (–≤–∞—Ä–∏–∞–Ω—Ç 1/2 –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ—Ç)
            if (typeof currentEgeTask.correct === 'string') {
                if (userInput !== '1' && userInput !== '2') {
                    alertDiv.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2';
                    alertDiv.className = 'text-red-600';
                    alertDiv.classList.remove('hidden');
                    return;
                }
                
                answeredEge = true;
                totalTasks++;
                
                if (userInput === currentEgeTask.correct) {
                    resultDiv.textContent = '–ü—Ä–∞–≤–∏–ª—å–Ω–æ!';
                    resultDiv.className = 'mt-4 p-3 rounded-lg bg-green-100 text-green-800';
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
                    const scoreSpan = document.getElementById('ege-score');
                    scoreSpan.textContent = parseInt(scoreSpan.textContent) + 1;
                    score++;
                } else {
                    resultDiv.textContent = `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${currentEgeTask.correct}`;
                    resultDiv.className = 'mt-4 p-3 rounded-lg bg-red-100 text-red-800';
                }
            } 
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —á–∏—Å–ª–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ (–ø–µ—Ä–µ–ø–ª–∞—Ç–∞ –ø–æ –∫—Ä–µ–¥–∏—Ç—É)
            else {
                const userAnswer = parseFloat(userInput);
                
                if (isNaN(userAnswer)) {
                    alertDiv.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ';
                    alertDiv.className = 'text-red-600';
                    alertDiv.classList.remove('hidden');
                    return;
                }
                
                answeredEge = true;
                totalTasks++;
                
                const roundedAnswer = Math.round(userAnswer * 100) / 100;
                const isCorrect = Math.abs(roundedAnswer - currentEgeTask.correct) < 0.01;
                
                if (isCorrect) {
                    resultDiv.textContent = `–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –û—Ç–≤–µ—Ç: ${formatNumber(currentEgeTask.correct)} —Ä—É–±.`;
                    resultDiv.className = 'mt-4 p-3 rounded-lg bg-green-100 text-green-800';
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
                    const scoreSpan = document.getElementById('ege-score');
                    scoreSpan.textContent = parseInt(scoreSpan.textContent) + 1;
                    score++;
                } else {
                    resultDiv.textContent = `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${formatNumber(currentEgeTask.correct)} —Ä—É–±.`;
                    resultDiv.className = 'mt-4 p-3 rounded-lg bg-red-100 text-red-800';
                }
            }
            
            resultDiv.classList.remove('hidden');
            answerInput.disabled = true;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–¥–∞—á
            const totalSpan = document.getElementById('ege-total');
            totalSpan.textContent = parseInt(totalSpan.textContent) + 1;
            
            updateProgress();
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á
        function checkAnswer(type) {
            const input = document.getElementById(`${type}-answer`);
            const resultDiv = document.getElementById(`${type}-result`);
            const alertDiv = document.getElementById(`${type}-alert`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–≤–µ—á–∞–ª–∏ –ª–∏ —É–∂–µ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å
            if (type === 'deposit' && answeredDeposit) {
                resultDiv.textContent = '–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å! –ù–∞–∂–º–∏—Ç–µ "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞"';
                resultDiv.className = 'mt-4 p-3 rounded-lg bg-yellow-100 text-yellow-800';
                resultDiv.classList.remove('hidden');
                return;
            }
            if (type === 'annuity' && answeredAnnuity) {
                resultDiv.textContent = '–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å! –ù–∞–∂–º–∏—Ç–µ "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞"';
                resultDiv.className = 'mt-4 p-3 rounded-lg bg-yellow-100 text-yellow-800';
                resultDiv.classList.remove('hidden');
                return;
            }
            if (type === 'diff' && answeredDiff) {
                resultDiv.textContent = '–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å! –ù–∞–∂–º–∏—Ç–µ "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞"';
                resultDiv.className = 'mt-4 p-3 rounded-lg bg-yellow-100 text-yellow-800';
                resultDiv.classList.remove('hidden');
                return;
            }
            if (type === 'invest' && answeredInvest) {
                resultDiv.textContent = '–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å! –ù–∞–∂–º–∏—Ç–µ "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞"';
                resultDiv.className = 'mt-4 p-3 rounded-lg bg-yellow-100 text-yellow-800';
                resultDiv.classList.remove('hidden');
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if (type === 'diff') {
                const parts = input.value.trim().split(/\s+/);
                if (parts.length !== 2 || isNaN(parts[0]) || isNaN(parts[1])) {
                    alertDiv.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª';
                    alertDiv.className = 'text-red-600';
                    alertDiv.classList.remove('hidden');
                    return;
                }
            } else {
                const userAnswer = parseFloat(input.value);
                if (isNaN(userAnswer)) {
                    alertDiv.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ';
                    alertDiv.className = 'text-red-600';
                    alertDiv.classList.remove('hidden');
                    return;
                }
            }
            
            // –°–∫—Ä—ã–≤–∞–µ–º –∞–ª–µ—Ä—Ç, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –ø–æ–∫–∞–∑–∞–Ω
            alertDiv.classList.add('hidden');
            
            // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
            let correctAnswer;
            if (type === 'diff') {
                correctAnswer = input.dataset.correct.split(' ').map(Number);
            } else {
                correctAnswer = parseFloat(input.dataset.correct);
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–¥–∞—á
            const totalSpan = document.getElementById(`${type}-total`);
            totalSpan.textContent = parseInt(totalSpan.textContent) + 1;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
            let isCorrect = false;
            if (type === 'diff') {
                const parts = input.value.trim().split(/\s+/);
                const userAnswer1 = parseFloat(parts[0]);
                const userAnswer2 = parseFloat(parts[1]);
                isCorrect = Math.abs(userAnswer1 - correctAnswer[0]) < 0.01 && 
                             Math.abs(userAnswer2 - correctAnswer[1]) < 0.01;
            } else {
                const userAnswer = parseFloat(input.value);
                isCorrect = Math.abs(userAnswer - correctAnswer) / correctAnswer < 0.01;
            }
            
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if (isCorrect) {
                resultDiv.textContent = type === 'diff' 
                    ? `‚úÖ –í–µ—Ä–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã: ${formatNumber(correctAnswer[0])} —Ä—É–±. –∏ ${formatNumber(correctAnswer[1])} —Ä—É–±.`
                    : `‚úÖ –í–µ—Ä–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${formatNumber(correctAnswer)} —Ä—É–±.`;
                resultDiv.className = 'mt-4 p-3 rounded-lg bg-green-100 text-green-800';
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
                const scoreSpan = document.getElementById(`${type}-score`);
                scoreSpan.textContent = parseInt(scoreSpan.textContent) + 1;
                score++;
            } else {
                resultDiv.textContent = type === 'diff'
                    ? `‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã: ${formatNumber(correctAnswer[0])} —Ä—É–±. –∏ ${formatNumber(correctAnswer[1])} —Ä—É–±.`
                    : `‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${formatNumber(correctAnswer)} —Ä—É–±.`;
                resultDiv.className = 'mt-4 p-3 rounded-lg bg-red-100 text-red-800';
            }
            
            resultDiv.classList.remove('hidden');
            input.disabled = true;
            
            // –ü–æ–º–µ—á–∞–µ–º –≤–æ–ø—Ä–æ—Å –∫–∞–∫ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã–π
            if (type === 'deposit') answeredDeposit = true;
            if (type === 'annuity') answeredAnnuity = true;
            if (type === 'diff') answeredDiff = true;
            if (type === 'invest') answeredInvest = true;
            
            updateProgress();
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        function updateProgress() {
            let totalCorrect = 0;
            let totalTasks = 0;
            
            ['deposit', 'annuity', 'diff', 'invest', 'ege'].forEach(type => {
                totalCorrect += parseInt(document.getElementById(`${type}-score`).textContent);
                totalTasks += parseInt(document.getElementById(`${type}-total`).textContent);
            });
            
            const progress = totalTasks > 0 ? Math.round((totalCorrect / totalTasks) * 100) : 0;
            document.getElementById('progress-bar').style.width = `${progress}%`;
            document.getElementById('total-score').textContent = progress;
            
            // –ò–∑–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
            const progressBar = document.getElementById('progress-bar');
            if (progress < 30) {
                progressBar.className = 'bg-gradient-to-r from-red-500 to-red-600 h-3 rounded-full progress-bar';
            } else if (progress < 70) {
                progressBar.className = 'bg-gradient-to-r from-yellow-500 to-yellow-600 h-3 rounded-full progress-bar';
            } else {
                progressBar.className = 'bg-gradient-to-r from-green-500 to-green-600 h-3 rounded-full progress-bar';
            }
        }
        
        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        function formatNumber(num) {
            return new Intl.NumberFormat('ru-RU').format(Math.round(num));
        }
        
        function getYearWord(years) {
            const lastDigit = years % 10;
            const lastTwoDigits = years % 100;
            
            if (lastTwoDigits >= 11 && lastTwoDigits <= 19) return '–ª–µ—Ç';
            if (lastDigit === 1) return '–≥–æ–¥';
            if (lastDigit >= 2 && lastDigit <= 4) return '–≥–æ–¥–∞';
            return '–ª–µ—Ç';
        }
        
        // –§—É–Ω–∫—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        function sanitizeInput(input) {
            if (typeof input !== 'string') return input;
            return input.replace(/</g, '&lt;').replace(/>/g, '&gt;');
        }

        function validateNumber(input) {
            if (typeof input !== 'string' && typeof input !== 'number') return NaN;
            const num = parseFloat(input);
            return isNaN(num) ? NaN : num;
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        document.addEventListener('DOMContentLoaded', function() {
            createFinancialBackground();
            createBackground();
            generateTask('deposit');
        });
    </script>
</body>
</html>
