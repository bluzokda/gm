<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' 'unsafe-inline'">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Финансовый тренажёр: проценты и кредиты</title>
    <style>
        :root {
            --primary: #2c3e50;
            --secondary: #3498db;
            --accent: #e74c3c;
            --light: #ecf0f1;
            --dark: #2c3e50;
            --success: #2ecc71;
            --warning: #f39c12;
        }
        
        * {
            box-sizing: border-box;
            font-family: 'Roboto', Arial, sans-serif;
        }
        
        body {
            margin: 0;
            padding: 0;
            background-color: var(--light);
            color: var(--dark);
            line-height: 1.6;
        }
        
        header {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            padding: 2rem 0;
            text-align: center;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }
        
        h1 {
            margin: 0;
            font-size: 2.5rem;
        }
        
        h2 {
            color: var(--secondary);
            border-bottom: 2px solid var(--accent);
            padding-bottom: 0.5rem;
            margin-top: 2rem;
        }
        
        .game-section {
            background: white;
            border-radius: 8px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        .tab-buttons {
            display: flex;
            margin-bottom: 1rem;
            border-bottom: 1px solid #ddd;
            flex-wrap: wrap;
        }
        
        .tab-btn {
            padding: 0.75rem 1.5rem;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1rem;
            transition: all 0.3s;
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
        }
        
        .tab-btn.active {
            background: var(--secondary);
            color: white;
            border-radius: 4px 4px 0 0;
        }
        
        .tab-content {
            display: none;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .question {
            margin-bottom: 1.5rem;
            padding: 1rem;
            background: var(--light);
            border-radius: 4px;
        }
        
        .answer-form {
            margin-top: 1rem;
        }
        
        input[type="text"], input[type="number"] {
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
            width: 100%;
            max-width: 300px;
        }
        
        button {
            background-color: var(--secondary);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1rem;
            transition: background-color 0.3s;
            margin-top: 0.5rem;
        }
        
        button:hover {
            background-color: var(--primary);
        }
        
        .result {
            margin-top: 1rem;
            padding: 1rem;
            border-radius: 4px;
            font-weight: bold;
        }
        
        .correct {
            background-color: var(--success);
            color: white;
        }
        
        .incorrect {
            background-color: var(--accent);
            color: white;
        }
        
        .progress-container {
            width: 100%;
            background-color: #f1f1f1;
            border-radius: 4px;
            margin: 1rem 0;
        }
        
        .progress-bar {
            height: 24px;
            background-color: var(--success);
            border-radius: 4px;
            width: 0%;
            transition: width 0.5s;
            text-align: center;
            line-height: 24px;
            color: white;
        }
        
        .theory {
            background-color: #f9f9f9;
            border-left: 4px solid var(--secondary);
            padding: 1rem;
            margin: 1rem 0;
        }
        
        footer {
            text-align: center;
            padding: 2rem;
            background-color: var(--dark);
            color: white;
            margin-top: 2rem;
        }
        
        @media (max-width: 768px) {
            .tab-buttons {
                flex-direction: column;
            }
            
            .tab-btn {
                margin-right: 0;
                margin-bottom: 0.25rem;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <h1>Финансовый тренажёр</h1>
            <p>Освойте проценты, вклады и кредиты на практике</p>
        </div>
    </header>
    
    <div class="container">
        <div class="game-section">
            <h2>Тренажёр по финансовой математике</h2>
            <div class="tab-buttons">
                <button class="tab-btn active" onclick="openTab('deposit')">Вклады</button>
                <button class="tab-btn" onclick="openTab('annuity')">Аннуитетный кредит</button>
                <button class="tab-btn" onclick="openTab('diff')">Дифференцированный кредит</button>
                <button class="tab-btn" onclick="openTab('ege')">Подготовка к ЕГЭ</button>
                <button class="tab-btn" onclick="openTab('theory')">Теория</button>
            </div>
            
            <div id="deposit" class="tab-content active">
                <div class="question">
                    <h3>Задача на вклады</h3>
                    <p id="deposit-question"></p>
                    <div class="answer-form">
                        <input type="number" id="deposit-answer" placeholder="Введите ответ">
                        <button onclick="checkDepositAnswer()">Проверить</button>
                    </div>
                    <div class="result" id="deposit-result"></div>
                </div>
                <button onclick="generateDepositTask()">Следующая задача</button>
            </div>
            
            <div id="annuity" class="tab-content">
                <div class="question">
                    <h3>Задача на аннуитетный кредит</h3>
                    <p id="annuity-question"></p>
                    <div class="answer-form">
                        <input type="number" id="annuity-answer" placeholder="Введите ответ">
                        <button onclick="checkAnnuityAnswer()">Проверить</button>
                    </div>
                    <div class="result" id="annuity-result"></div>
                </div>
                <button onclick="generateAnnuityTask()">Следующая задача</button>
            </div>
            
            <div id="diff" class="tab-content">
                <div class="question">
                    <h3>Задача на дифференцированный кредит</h3>
                    <p id="diff-question"></p>
                    <div class="answer-form">
                        <input type="text" id="diff-answer" placeholder="Введите два числа через пробел">
                        <button onclick="checkDiffAnswer()">Проверить</button>
                    </div>
                    <div class="result" id="diff-result"></div>
                </div>
                <button onclick="generateDiffTask()">Следующая задача</button>
            </div>
            
            <div id="ege" class="tab-content">
                <div class="question">
                    <h3>Задача для подготовки к ЕГЭ</h3>
                    <p id="ege-question"></p>
                    <div class="answer-form">
                        <input type="text" id="ege-answer" placeholder="Введите ответ">
                        <button onclick="checkEgeAnswer()">Проверить</button>
                    </div>
                    <div class="result" id="ege-result"></div>
                </div>
                <button onclick="generateEgeTask()">Следующая задача</button>
            </div>
            
            <div id="theory" class="tab-content">
                <div class="theory">
                    <h3>Простые проценты</h3>
                    <p>Формула: S = P × (1 + r × t)</p>
                    <p>Где: S - итоговая сумма, P - начальная сумма, r - процентная ставка (в десятичной форме), t - время в годах.</p>
                </div>
                
                <div class="theory">
                    <h3>Сложные проценты</h3>
                    <p>Формула: S = P × (1 + r)<sup>t</sup></p>
                    <p>При капитализации проценты начисляются на проценты, поэтому сумма растёт быстрее.</p>
                </div>
                
                <div class="theory">
                    <h3>Аннуитетный платёж</h3>
                    <p>Формула: Платёж = (P × r × (1 + r)<sup>n</sup>) / ((1 + r)<sup>n</sup> - 1)</p>
                    <p>Где: P - сумма кредита, r - месячная ставка, n - количество месяцев.</p>
                </div>
                
                <div class="theory">
                    <h3>Дифференцированный платёж</h3>
                    <p>Формула: Платёж = (P / n) + (P - (P/n)×(m-1)) × r</p>
                    <p>Где: n - общее число месяцев, m - текущий месяц, r - месячная ставка.</p>
                </div>
            </div>
            
            <div class="progress-container">
                <div class="progress-bar" id="progress">0%</div>
            </div>
        </div>
    </div>
    
    <footer>
        <div class="container">
            <p>© 2023 Финансовый тренажёр. Подготовка к ЕГЭ.</p>
        </div>
    </footer>
    
    <script>
        // Функции безопасности
        function sanitizeInput(input) {
            if (typeof input !== 'string') return input;
            return input.replace(/</g, '&lt;').replace(/>/g, '&gt;');
        }

        function validateNumber(input) {
            if (typeof input !== 'string' && typeof input !== 'number') return NaN;
            const num = parseFloat(input);
            return isNaN(num) ? NaN : num;
        }

        // Глобальные переменные для хранения текущих задач и результатов
        let currentDepositTask = {};
        let currentAnnuityTask = {};
        let currentDiffTask = {};
        let currentEgeTask = {};
        let score = 0;
        let totalTasks = 0;
        
        // Функции для работы с вкладками
        function openTab(tabName) {
            const tabContents = document.getElementsByClassName('tab-content');
            for (let i = 0; i < tabContents.length; i++) {
                tabContents[i].classList.remove('active');
            }
            
            const tabButtons = document.getElementsByClassName('tab-btn');
            for (let i = 0; i < tabButtons.length; i++) {
                tabButtons[i].classList.remove('active');
            }
            
            document.getElementById(tabName).classList.add('active');
            event.currentTarget.classList.add('active');
            
            // При открытии вкладки генерируем новую задачу
            if (tabName === 'deposit') generateDepositTask();
            if (tabName === 'annuity') generateAnnuityTask();
            if (tabName === 'diff') generateDiffTask();
            if (tabName === 'ege') generateEgeTask();
        }
        
        // Функции для генерации задач
        function generateDepositTask() {
            const principal = Math.floor(Math.random() * 90000) + 10000;
            const rate = Math.floor(Math.random() * 11) + 5;
            const years = Math.floor(Math.random() * 5) + 1;
            const isCompound = Math.random() > 0.5;
            
            let correct;
            if (isCompound) {
                correct = principal * Math.pow(1 + rate / 100, years);
                document.getElementById('deposit-question').textContent = 
                    `Вклад ${principal} руб. под ${rate}% годовых на ${years} год(а) с капитализацией. Сколько получит клиент?`;
            } else {
                correct = principal * (1 + rate / 100 * years);
                document.getElementById('deposit-question').textContent = 
                    `Вклад ${principal} руб. под ${rate}% годовых на ${years} год(а) без капитализации. Сколько получит клиент?`;
            }
            
            currentDepositTask = {
                correct: Math.round(correct * 100) / 100
            };
            
            document.getElementById('deposit-answer').value = '';
            document.getElementById('deposit-result').textContent = '';
            document.getElementById('deposit-result').className = 'result';
        }
        
        function generateAnnuityTask() {
            const principal = Math.floor(Math.random() * 900000) + 100000;
            const rate = Math.floor(Math.random() * 11) + 10;
            const years = Math.floor(Math.random() * 5) + 1;
            const months = years * 12;
            const monthlyRate = rate / 100 / 12;
            
            const payment = principal * (monthlyRate * Math.pow(1 + monthlyRate, months)) / 
                          (Math.pow(1 + monthlyRate, months) - 1);
            
            document.getElementById('annuity-question').textContent = 
                `Кредит ${principal} руб. под ${rate}% годовых на ${years} лет с аннуитетными платежами. Какой будет ежемесячный платёж?`;
            
            currentAnnuityTask = {
                correct: Math.round(payment * 100) / 100
            };
            
            document.getElementById('annuity-answer').value = '';
            document.getElementById('annuity-result').textContent = '';
            document.getElementById('annuity-result').className = 'result';
        }
        
        function generateDiffTask() {
            const principal = Math.floor(Math.random() * 900000) + 100000;
            const rate = Math.floor(Math.random() * 11) + 10;
            const years = Math.floor(Math.random() * 5) + 1;
            const months = years * 12;
            
            const monthlyPrincipal = principal / months;
            const firstPayment = monthlyPrincipal + principal * (rate / 100 / 12);
            const lastPayment = monthlyPrincipal + monthlyPrincipal * (rate / 100 / 12);
            
            document.getElementById('diff-question').textContent = 
                `Кредит ${principal} руб. под ${rate}% годовых на ${years} лет с дифференцированными платежами. Какой будет первый и последний платежи? (введите через пробел)`;
            
            currentDiffTask = {
                correct: [
                    Math.round(firstPayment * 100) / 100,
                    Math.round(lastPayment * 100) / 100
                ]
            };
            
            document.getElementById('diff-answer').value = '';
            document.getElementById('diff-result').textContent = '';
            document.getElementById('diff-result').className = 'result';
        }
        
        function generateEgeTask() {
            const taskType = Math.floor(Math.random() * 3) + 1;
            
            if (taskType === 1) {
                const principal = Math.floor(Math.random() * 90000) + 10000;
                const years = Math.floor(Math.random() * 5) + 1;
                
                const rate1 = Math.floor(Math.random() * 11) + 5;
                const rate2 = Math.floor(Math.random() * 11) + 5;
                const type1 = Math.random() > 0.5 ? 'простыми' : 'сложными';
                const type2 = Math.random() > 0.5 ? 'простыми' : 'сложными';
                
                let sum1, sum2;
                
                if (type1 === 'простыми') {
                    sum1 = principal * (1 + rate1 / 100 * years);
                } else {
                    sum1 = principal * Math.pow(1 + rate1 / 100, years);
                }
                
                if (type2 === 'простыми') {
                    sum2 = principal * (1 + rate2 / 100 * years);
                } else {
                    sum2 = principal * Math.pow(1 + rate2 / 100, years);
                }
                
                // Убедимся, что варианты разные
                if (Math.abs(sum1 - sum2) < 100) {
                    return generateEgeTask();
                }
                
                document.getElementById('ege-question').textContent = 
                    `Вкладчик хочет внести ${principal} руб. на ${years} лет. Выберите более выгодный вариант:
                    Вариант 1: ${rate1}% годовых с ${type1} процентами.
                    Вариант 2: ${rate2}% годовых с ${type2} процентами.
                    Введите номер варианта (1 или 2):`;
                
                currentEgeTask = {
                    correct: sum1 > sum2 ? '1' : '2'
                };
            }
            else if (taskType === 2) {
                const principal = Math.floor(Math.random() * 900000) + 100000;
                const rate = Math.floor(Math.random() * 11) + 10;
                const years = Math.floor(Math.random() * 5) + 1;
                const months = years * 12;
                const monthlyRate = rate / 100 / 12;
                
                const payment = principal * (monthlyRate * Math.pow(1 + monthlyRate, months)) / 
                              (Math.pow(1 + monthlyRate, months) - 1);
                const totalPayment = payment * months;
                const overpayment = totalPayment - principal;
                
                document.getElementById('ege-question').textContent = 
                    `Кредит ${principal} руб. под ${rate}% годовых на ${years} лет с аннуитетными платежами. Какова общая переплата по кредиту?`;
                
                currentEgeTask = {
                    correct: Math.round(overpayment * 100) / 100
                };
            }
            else if (taskType === 3) {
                const principal = Math.floor(Math.random() * 400000) + 100000;
                const multiplier = Math.random() * 1.2 + 1.3;
                const target = Math.round(principal * multiplier);
                const rate = Math.floor(Math.random() * 11) + 5;
                
                const t = Math.log(target / principal) / Math.log(1 + rate / 100);
                const tYears = Math.ceil(t);
                
                document.getElementById('ege-question').textContent = 
                    `Вклад ${principal} руб. под ${rate}% годовых с ежегодной капитализацией. Через сколько лет сумма превысит ${target} руб.?`;
                
                currentEgeTask = {
                    correct: tYears.toString()
                };
            }
            
            document.getElementById('ege-answer').value = '';
            document.getElementById('ege-result').textContent = '';
            document.getElementById('ege-result').className = 'result';
        }
        
        // Функции проверки ответов с защитой
        function checkDepositAnswer() {
            const userInput = document.getElementById('deposit-answer').value;
            const sanitizedInput = sanitizeInput(userInput);
            const userAnswer = validateNumber(sanitizedInput);
            const resultDiv = document.getElementById('deposit-result');
            
            if (isNaN(userAnswer)) {
                resultDiv.textContent = 'Пожалуй